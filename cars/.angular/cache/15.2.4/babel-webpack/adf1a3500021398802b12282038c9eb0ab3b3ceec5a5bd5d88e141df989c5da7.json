{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ReglogComponent = class ReglogComponent {\n  constructor(serv, carcomp, servi) {\n    this.serv = serv;\n    this.carcomp = carcomp;\n    this.servi = servi;\n    this.users = [];\n    this.autorized = false;\n    this.status = \"Не в системе\";\n    this.name = '';\n    this.mail = '';\n    this.pas = '';\n    this.cars = [];\n  }\n  ngOnInit() {\n    this.get();\n  }\n  get() {\n    this.serv.getAllUsers().subscribe(us => {\n      this.users = us;\n      console.log(us);\n    });\n  }\n  reg() {\n    let curr = {\n      name: this.name,\n      login: this.mail,\n      password: this.pas\n    };\n    console.log(curr);\n    this.name = '';\n    this.mail = '';\n    this.pas = '';\n    this.serv.addUs({\n      body: curr\n    });\n    this.get();\n  }\n  log() {\n    let curr = {\n      name: this.name,\n      login: this.mail,\n      password: this.pas\n    };\n    this.name = '';\n    this.mail = '';\n    this.pas = '';\n    for (let i = 0; i < this.users.length; i++) {\n      let element = this.users[i];\n      if (curr.login == element.login && curr.name == element.name && curr.password == element.password) {\n        this.autorized = true;\n        this.status = \"Вход выполнен\";\n        break;\n      }\n    }\n    // this.showdata(this.autorized);\n  }\n\n  showdata(usl) {\n    console.log(usl);\n    if (usl) {\n      this.req();\n    } else {}\n  }\n  req() {\n    console.log('i work');\n    this.servi.getAllCar().subscribe(car => {\n      this.cars = car;\n    });\n    console.log(this.cars);\n  }\n  unLog() {\n    this.autorized = false;\n    this.status = \"Не в системе\";\n    this.cars = [];\n  }\n};\nReglogComponent = __decorate([Component({\n  selector: 'app-reglog',\n  templateUrl: './reglog.component.html',\n  styleUrls: ['./reglog.component.css']\n})], ReglogComponent);\nexport { ReglogComponent };","map":{"version":3,"mappings":"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","names":["Component","ReglogComponent","constructor","serv","carcomp","servi","ngOnInit","get","getAllUsers","subscribe","us","users","console","log","reg","curr","name","login","mail","password","pas","addUs","body","i","length","element","autorized","status","showdata","usl","req","getAllCar","car","cars","unLog","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\WEB-dev\\cars\\src\\app\\reglog\\reglog.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Car, User } from '../api/models';\nimport { USService } from '../api/services';\nimport { InMemoryUsers } from '../memory-us.service';\nimport { CarsComponent } from '../cars/cars.component';\nimport { Service } from '../api/services';\n@Component({\n  selector: 'app-reglog',\n  templateUrl: './reglog.component.html',\n  styleUrls: ['./reglog.component.css']\n})\nexport class ReglogComponent {\n\n  users : User[] = [];\n  autorized: boolean = false;\n  status : string = \"Не в системе\"\n  constructor(private serv : USService,protected carcomp : CarsComponent, private servi: Service ){}\n  ngOnInit(): void {\nthis.get();\n\n  }\n  get(){\n    this.serv.getAllUsers().subscribe((us) => {\n      this.users = us;\n      console.log(us);\n    });\n  }\n  name :string = '';\n  mail :string ='';\n  pas : string = '';\n  reg(){\n    let curr:User = {\n      name :this.name,\n      login : this.mail,\n      password : this.pas\n    };\n    console.log(curr);\n    this.name = '';\n    this.mail ='';\n    this.pas = '';\n    this.serv.addUs({body:curr});\n    this.get();\n  }\n  log(){\n    let curr:User = {\n      name :this.name,\n      login : this.mail,\n      password : this.pas\n    };\n    this.name = '';\n    this.mail ='';\n    this.pas = '';\n    for(let i = 0; i< this.users.length;i++){\n      let element = this.users[i];\n      if(curr.login == element.login && curr.name == element.name && curr.password == element.password){\n        this.autorized = true;\n        this.status = \"Вход выполнен\"\n        break;\n       }\n    }\n    // this.showdata(this.autorized);\n  }\n  showdata(usl : boolean){\n    console.log(usl);\n    if(usl){\n    this.req();\n    }\n    else{\n\n    }\n  }\n  cars : Car[] =[];\n\n  req(): void {\n    console.log('i work');\n    this.servi.getAllCar().subscribe((car) => {\n      this.cars = car;\n    });\n    console.log(this.cars);\n\n  }\n  unLog():void{\n    this.autorized = false;\n    this.status = \"Не в системе\"\n    this.cars = [];\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
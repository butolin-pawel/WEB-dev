{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport * as i0 from \"@angular/core\";\nexport class WebsocketService {\n  constructor() {\n    const socket = new SockJS('http://localhost:8080/websocket'); // Указывает адрес WebSocket сервера\n    this.stompClient = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000\n    });\n    this.stompClient.activate();\n  }\n  connect() {\n    // return new Observable(observer => {\n    //   const subscription: StompSubscription = this.stompClient.subscribe('/topic/data', (message: IMessage) => {\n    //     observer.next(JSON.parse(message.body)); // Получение данных и передача их в поток Observable\n    //   });\n    // });\n  }\n  sendData(data) {\n    // this.stompClient.publish({\n    //   destination: '/app/updateData',\n    //   body: JSON.stringify(data)\n    // }); // Отправка данных на сервер\n  }\n}\nWebsocketService.ɵfac = function WebsocketService_Factory(t) {\n  return new (t || WebsocketService)();\n};\nWebsocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebsocketService,\n  factory: WebsocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAgBA,MAAM,QAAoC,gBAAgB;AAC1E,OAAO,KAAKC,MAAM,MAAM,eAAe;;AAIvC,OAAM,MAAOC,gBAAgB;EAG3BC;IACE,MAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,iCAAiC,CAAC,CAAC,CAAC;IAC9D,IAAI,CAACI,WAAW,GAAG,IAAIL,MAAM,CAAC;MAC5BM,gBAAgB,EAAE,MAAMF,MAAM;MAC9BG,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE;KACpB,CAAC;IACF,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;EAC7B;EAEAC,OAAO;IACL;IACA;IACA;IACA;IACA;EAAA;EAGFC,QAAQ,CAACC,IAAS;IAChB;IACA;IACA;IACA;EAAA;;AA1BSX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAY,SAAhBZ,gBAAgB;EAAAa,YAFf;AAAM","names":["Client","SockJS","WebsocketService","constructor","socket","stompClient","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","activate","connect","sendData","data","factory","providedIn"],"sourceRoot":"","sources":["C:\\WEB-dev\\lab6\\src\\app\\websocket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Stomp, Client, StompSubscription, IMessage} from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n  private stompClient: Client;\n\n  constructor() {\n    const socket = new SockJS('http://localhost:8080/websocket'); // Указывает адрес WebSocket сервера\n    this.stompClient = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n    });\n    this.stompClient.activate();\n  }\n\n  connect(): Observable<any> {\n    // return new Observable(observer => {\n    //   const subscription: StompSubscription = this.stompClient.subscribe('/topic/data', (message: IMessage) => {\n    //     observer.next(JSON.parse(message.body)); // Получение данных и передача их в поток Observable\n    //   });\n    // });\n  }\n\n  sendData(data: any): void {\n    // this.stompClient.publish({\n    //   destination: '/app/updateData',\n    //   body: JSON.stringify(data)\n    // }); // Отправка данных на сервер\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
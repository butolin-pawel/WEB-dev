{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class WebsocketService {\n  constructor() {\n    // const socket = new SockJS('http://localhost:8082/websocket'); // Указывает адрес WebSocket сервера\n    // this.stompClient = new Client({\n    //   webSocketFactory: () => socket,\n    //   reconnectDelay: 5000,\n    //   heartbeatIncoming: 4000,\n    //   heartbeatOutgoing: 4000,\n    // });\n    // this.stompClient.activate();\n  }\n  connect() {\n    return new Observable(observer => {\n      const subscription = this.stompClient.subscribe('/topic/data', message => {\n        observer.next(JSON.parse(message.body)); // Получение данных и передача их в поток Observable\n      });\n    });\n  }\n\n  sendData(data) {\n    this.stompClient.publish({\n      destination: '/app/updateData',\n      body: JSON.stringify(data)\n    }); // Отправка данных на сервер\n  }\n}\n\nWebsocketService.ɵfac = function WebsocketService_Factory(t) {\n  return new (t || WebsocketService)();\n};\nWebsocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebsocketService,\n  factory: WebsocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,MAAM;;AAMjC,OAAM,MAAOC,gBAAgB;EAG3BC;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGFC,OAAO;IACL,OAAO,IAAIH,UAAU,CAACI,QAAQ,IAAG;MAC/B,MAAMC,YAAY,GAAsB,IAAI,CAACC,WAAW,CAACC,SAAS,CAAC,aAAa,EAAGC,OAAiB,IAAI;QACtGJ,QAAQ,CAACK,IAAI,CAACC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEAC,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACR,WAAW,CAACS,OAAO,CAAC;MACvBC,WAAW,EAAE,iBAAiB;MAC9BJ,IAAI,EAAEF,IAAI,CAACO,SAAS,CAACH,IAAI;KAC1B,CAAC,CAAC,CAAC;EACN;;;AA3BWb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAiB,SAAhBjB,gBAAgB;EAAAkB,YAFf;AAAM","names":["Observable","WebsocketService","constructor","connect","observer","subscription","stompClient","subscribe","message","next","JSON","parse","body","sendData","data","publish","destination","stringify","factory","providedIn"],"sourceRoot":"","sources":["C:\\WEB-dev\\lab6\\src\\app\\websocket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Stomp, Client, StompSubscription, IMessage} from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n  private stompClient!: Client;\n\n  constructor() {\n    // const socket = new SockJS('http://localhost:8082/websocket'); // Указывает адрес WebSocket сервера\n    // this.stompClient = new Client({\n    //   webSocketFactory: () => socket,\n    //   reconnectDelay: 5000,\n    //   heartbeatIncoming: 4000,\n    //   heartbeatOutgoing: 4000,\n    // });\n    // this.stompClient.activate();\n  }\n\n  connect(): Observable<any> {\n    return new Observable(observer => {\n      const subscription: StompSubscription = this.stompClient.subscribe('/topic/data', (message: IMessage) => {\n        observer.next(JSON.parse(message.body)); // Получение данных и передача их в поток Observable\n      });\n    });\n  }\n\n  sendData(data: any): void {\n    this.stompClient.publish({\n      destination: '/app/updateData',\n      body: JSON.stringify(data)\n    }); // Отправка данных на сервер\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}